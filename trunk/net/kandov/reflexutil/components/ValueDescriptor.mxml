<?xml version="1.0" encoding="utf-8"?>
<!--
/*
*	Copyright 2007 Alon Kandov (kandov@gmail.com)
*	ReflexUtil <http://reflexutil.googlecode.com>
*	
*	==========================================================================
*	
*	This file is part of ReflexUtil.
*	
*	ReflexUtil is free software: you can redistribute it and/or modify
*	it under the terms of the GNU General Public License as published by
*	the Free Software Foundation, either version 3 of the License, or
*	(at your option) any later version.
*	
*	ReflexUtil is distributed in the hope that it will be useful,
*	but WITHOUT ANY WARRANTY; without even the implied warranty of
*	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*	GNU General Public License for more details.
*	
*	You should have received a copy of the GNU General Public License
*	along with ReflexUtil.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<window:SizeableTitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:window="com.adobe.ColdFusion.components.*"
	showCloseButton="true" width="300" height="300"
	title="{ComponentUtil.getUID(propertyInfo.component) + '.' + propertyInfo.name}">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.utils.ObjectUtil;
			
			import net.kandov.reflexutil.assets.Images;
			import net.kandov.reflexutil.types.PropertyInfo;
			import net.kandov.reflexutil.utils.ComponentUtil;
			
			private var imgValueChange:Image;
			
			//--------------------------------------------------------------------------
			// protected
			//--------------------------------------------------------------------------
			
			override protected function createChildren():void {
				super.createChildren();
				
				imgValueChange = new Image();
				if (propertyInfo.bindable) {
					imgValueChange.id = "btnBindable";
					imgValueChange.source = Images.BINDABLE;
					imgValueChange.toolTip = "Bindable (refreshes automatically)";
				} else {
					imgValueChange.id = "btnRefresh";
					imgValueChange.source = Images.REFRESH_SMALL;
					imgValueChange.toolTip = "Refresh";
					imgValueChange.buttonMode = true;
					imgValueChange.addEventListener(MouseEvent.CLICK, btnRefreshClickHandler, false, 0, true);
				}
				titleBar.addChild(imgValueChange);
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				imgValueChange.setActualSize(imgValueChange.getExplicitOrMeasuredWidth(),
					imgValueChange.getExplicitOrMeasuredHeight());
				
				imgValueChange.x = width - imgValueChange.width - 30;
				imgValueChange.y = 6;
			}
			
			//--------------------------------------------------------------------------
			// private
			//--------------------------------------------------------------------------
			
			[Bindable(event="dataChange")]
			private function get propertyInfo():PropertyInfo {
				return PropertyInfo(data);
			}
			
			//--------------------------------------------------------------------------
			// handlers
			//--------------------------------------------------------------------------
			
			private function btnRefreshClickHandler(event:MouseEvent):void {
				ComponentUtil.updateValueIfNotBindable(propertyInfo);
			}
		]]>
	</mx:Script>
	
	<mx:TextArea text="{ObjectUtil.toString(propertyInfo.value, null, ['loaderInfo'])}"
		width="100%" height="100%" editable="false"/>
	
</window:SizeableTitleWindow>